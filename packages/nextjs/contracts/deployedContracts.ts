/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    VotingContract: {
      address: "0xc5a5C42992dECbae36851359345FE25997F5C42d",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "electionId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "proposalName",
              type: "string",
            },
          ],
          name: "ProposalAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "electionName",
              type: "string",
            },
          ],
          name: "VotingAdded",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_electionId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_proposalName",
              type: "string",
            },
          ],
          name: "addProposal",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_electionId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_voterId",
              type: "address",
            },
          ],
          name: "addVoter",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_electionName",
              type: "string",
            },
          ],
          name: "addVoting",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_electionId",
              type: "uint256",
            },
          ],
          name: "completeElection",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_electionId",
              type: "uint256",
            },
          ],
          name: "deleteElection",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "electionCounter",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "elections",
          outputs: [
            {
              internalType: "address",
              name: "chairperson",
              type: "address",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "votersCount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "proposalsCount",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "isComplete",
              type: "bool",
            },
            {
              internalType: "bool",
              name: "flag",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_electionId",
              type: "uint256",
            },
          ],
          name: "getElection",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
            {
              internalType: "string[]",
              name: "",
              type: "string[]",
            },
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getElections",
          outputs: [
            {
              internalType: "string[]",
              name: "",
              type: "string[]",
            },
            {
              internalType: "bool[]",
              name: "",
              type: "bool[]",
            },
            {
              internalType: "bool[]",
              name: "",
              type: "bool[]",
            },
            {
              internalType: "string[]",
              name: "",
              type: "string[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_electionId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_indexProposal",
              type: "uint256",
            },
          ],
          name: "getProposal",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "voteCount",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "flag",
                  type: "bool",
                },
              ],
              internalType: "struct VotingContract.Proposal",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_electionId",
              type: "uint256",
            },
          ],
          name: "getProposals",
          outputs: [
            {
              internalType: "string[]",
              name: "",
              type: "string[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_electionId",
              type: "uint256",
            },
          ],
          name: "getVotingOwner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "proposalCounter",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_electionId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_indexProposal",
              type: "uint256",
            },
          ],
          name: "vote",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
